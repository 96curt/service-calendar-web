openapi: 3.0.3
info:
  title: Service Calendar API
  version: 0.7.0
  description: Mockup Service Calendar API
paths:
  /api/auth/login:
    post:
      operationId: auth_login_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/login{format}:
    post:
      operationId: auth_login_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - {}
      responses:
        '200':
          description: No response body
  /api/auth/logout:
    post:
      operationId: auth_logout_create
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/logout{format}:
    post:
      operationId: auth_logout_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - auth
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/customers/:
    get:
      operationId: customers_list
      tags:
      - customers
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
  /api/customers{format}:
    get:
      operationId: customers_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - customers
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
          description: ''
  /api/profile/:
    get:
      operationId: profile_retrieve
      tags:
      - profile
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/profile{format}:
    get:
      operationId: profile_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - profile
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/regions:
    get:
      operationId: regions_list
      tags:
      - regions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
          description: ''
  /api/regions{format}:
    get:
      operationId: regions_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - regions
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Region'
          description: ''
  /api/service/centers/:
    get:
      operationId: service_centers_list
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCenter'
          description: ''
  /api/service/centers{format}:
    get:
      operationId: service_centers_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceCenter'
          description: ''
  /api/service/comments/:
    get:
      operationId: service_comments_list
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: service_comments_create
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/service/comments{format}:
    get:
      operationId: service_comments_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
          description: ''
    post:
      operationId: service_comments_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Comment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Comment'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
          description: ''
  /api/service/jobsites/:
    get:
      operationId: service_jobsites_list
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSite'
          description: ''
  /api/service/jobsites{format}:
    get:
      operationId: service_jobsites_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/JobSite'
          description: ''
  /api/service/order/addendum/{id}:
    get:
      operationId: service_order_addendum_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAddendumDetail'
          description: ''
  /api/service/order/addendum/{id}{format}:
    get:
      operationId: service_order_addendum_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderAddendumDetail'
          description: ''
  /api/service/order/addendums:
    get:
      operationId: service_order_addendums_list
      parameters:
      - in: query
        name: number
        schema:
          type: integer
      - in: query
        name: sequence__number
        schema:
          type: integer
      - in: query
        name: sequence__region
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
      - in: query
        name: statusDate
        schema:
          type: string
          format: date
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderAddendumList'
          description: ''
  /api/service/order/addendums{format}:
    get:
      operationId: service_order_addendums_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: number
        schema:
          type: integer
      - in: query
        name: sequence__number
        schema:
          type: integer
      - in: query
        name: sequence__region
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - '1'
          - '2'
          - '3'
          - '4'
          - '5'
      - in: query
        name: statusDate
        schema:
          type: string
          format: date
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderAddendumList'
          description: ''
  /api/service/order/item/{id}:
    get:
      operationId: service_order_item_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/service/order/item/{id}{format}:
    get:
      operationId: service_order_item_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderItem'
          description: ''
  /api/service/order/sequence/{id}:
    get:
      operationId: service_order_sequence_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSequenceDetail'
          description: ''
  /api/service/order/sequence/{id}{format}:
    get:
      operationId: service_order_sequence_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSequenceDetail'
          description: ''
  /api/service/orders/sequences:
    get:
      operationId: service_orders_sequences_list
      parameters:
      - in: query
        name: number
        schema:
          type: integer
      - in: query
        name: region
        schema:
          type: integer
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSequenceList'
          description: ''
  /api/service/orders/sequences{format}:
    get:
      operationId: service_orders_sequences_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: number
        schema:
          type: integer
      - in: query
        name: region
        schema:
          type: integer
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderSequenceList'
          description: ''
  /api/service/schedule/{id}:
    get:
      operationId: service_schedule_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: service_schedule_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: service_schedule_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: service_schedule_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/service/schedule/{id}{format}:
    get:
      operationId: service_schedule_formatted_retrieve
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    put:
      operationId: service_schedule_formatted_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    patch:
      operationId: service_schedule_formatted_partial_update
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedSchedule'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
    delete:
      operationId: service_schedule_formatted_destroy
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/service/schedules/:
    get:
      operationId: service_schedules_list
      parameters:
      - in: query
        name: addendum__number
        schema:
          type: integer
      - in: query
        name: addendum__sequence__jobSite__city
        schema:
          type: string
      - in: query
        name: addendum__sequence__jobSite__zipCode
        schema:
          type: string
      - in: query
        name: addendum__sequence__number
        schema:
          type: integer
      - in: query
        name: addendum__sequence__region
        schema:
          type: integer
      - in: query
        name: addendum__sequence__serviceCenter__manager
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
      - in: query
        name: endDateTime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: endDateTime_before
        schema:
          type: string
          format: date-time
      - in: query
        name: serviceCenter
        schema:
          type: integer
      - in: query
        name: startDateTime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: startDateTime_before
        schema:
          type: string
          format: date-time
      - in: query
        name: technicians
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
    post:
      operationId: service_schedules_create
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/service/schedules{format}:
    get:
      operationId: service_schedules_formatted_list
      parameters:
      - in: query
        name: addendum__number
        schema:
          type: integer
      - in: query
        name: addendum__sequence__jobSite__city
        schema:
          type: string
      - in: query
        name: addendum__sequence__jobSite__zipCode
        schema:
          type: string
      - in: query
        name: addendum__sequence__number
        schema:
          type: integer
      - in: query
        name: addendum__sequence__region
        schema:
          type: integer
      - in: query
        name: addendum__sequence__serviceCenter__manager
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
      - in: query
        name: endDateTime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: endDateTime_before
        schema:
          type: string
          format: date-time
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: serviceCenter
        schema:
          type: integer
      - in: query
        name: startDateTime_after
        schema:
          type: string
          format: date-time
      - in: query
        name: startDateTime_before
        schema:
          type: string
          format: date-time
      - in: query
        name: technicians
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Schedule'
          description: ''
    post:
      operationId: service_schedules_formatted_create
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      tags:
      - service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Schedule'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Schedule'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Schedule'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Schedule'
          description: ''
  /api/service/techs/:
    get:
      operationId: service_techs_list
      parameters:
      - in: query
        name: primaryCenter
        schema:
          type: integer
      - in: query
        name: primaryCenter__manager
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
      - in: query
        name: primaryCenter__region
        schema:
          type: integer
      - in: query
        name: qualifier
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: workWeek
        schema:
          type: integer
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Technician'
          description: ''
  /api/service/techs{format}:
    get:
      operationId: service_techs_formatted_list
      parameters:
      - in: path
        name: format
        schema:
          type: string
          enum:
          - .json
        required: true
      - in: query
        name: primaryCenter
        schema:
          type: integer
      - in: query
        name: primaryCenter__manager
        schema:
          type: string
          enum:
          - '1'
          - '10'
          - '2'
          - '3'
          - '4'
          - '5'
          - '6'
          - '7'
          - '8'
          - '9'
      - in: query
        name: primaryCenter__region
        schema:
          type: integer
      - in: query
        name: qualifier
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
      - in: query
        name: workWeek
        schema:
          type: integer
      tags:
      - service
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Technician'
          description: ''
components:
  schemas:
    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        commentType:
          $ref: '#/components/schemas/CommentTypeEnum'
        updatedAt:
          type: string
          format: date-time
          readOnly: true
        comment:
          type: string
          maxLength: 2048
        order:
          type: integer
        lastUpdateBy:
          type: integer
      required:
      - comment
      - commentType
      - id
      - lastUpdateBy
      - order
      - updatedAt
    CommentTypeEnum:
      enum:
      - Q
      - E
      - P
      - T
      - S
      - O
      - R
      - J
      type: string
    Customer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          maxLength: 1024
        street2:
          type: string
          maxLength: 1024
        city:
          type: string
          maxLength: 1024
        state:
          $ref: '#/components/schemas/StateEnum'
        zipCode:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 2
        county:
          type: string
          maxLength: 128
        latitude:
          type: number
          format: double
          nullable: true
        longitute:
          type: number
          format: double
          nullable: true
        firstName:
          type: string
          maxLength: 128
        lastName:
          type: string
          maxLength: 128
        companyName:
          type: string
          nullable: true
          maxLength: 256
      required:
      - city
      - county
      - firstName
      - id
      - lastName
      - state
      - street
      - zipCode
    JobSite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          maxLength: 1024
        street2:
          type: string
          maxLength: 1024
        city:
          type: string
          maxLength: 1024
        state:
          $ref: '#/components/schemas/StateEnum'
        zipCode:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 2
        county:
          type: string
          maxLength: 128
        latitude:
          type: number
          format: double
          nullable: true
        longitute:
          type: number
          format: double
          nullable: true
        region:
          type: integer
        owner:
          type: integer
      required:
      - city
      - county
      - id
      - owner
      - region
      - state
      - street
      - zipCode
    Login:
      type: object
      description: |-
        This serializer defines two fields for authentication:
          * username
          * password.
        It will try to authenticate the user with when validated.
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - password
      - username
    ManagerEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      type: string
    OrderAddendumDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          readOnly: true
        sequence:
          type: string
          format: uri
        description:
          type: string
          maxLength: 128
        laborHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        travelHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        trips:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,0})?$
        status:
          $ref: '#/components/schemas/StatusEnum'
        statusDate:
          type: string
          format: date
          readOnly: true
        item_set:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
        schedule_set:
          type: array
          items:
            type: string
            format: uri
          readOnly: true
      required:
      - description
      - id
      - item_set
      - laborHours
      - number
      - schedule_set
      - sequence
      - statusDate
      - travelHours
      - trips
    OrderAddendumList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          readOnly: true
        sequence:
          type: integer
        name:
          type: string
          readOnly: true
        description:
          type: string
          maxLength: 128
        trips:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,0})?$
        travelHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        laborHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        status:
          $ref: '#/components/schemas/StatusEnum'
        statusDate:
          type: string
          format: date
          readOnly: true
      required:
      - description
      - id
      - laborHours
      - name
      - number
      - sequence
      - statusDate
      - travelHours
      - trips
    OrderItem:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          readOnly: true
        partOrder:
          type: string
          maxLength: 8
        partItem:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,0})?$
        partDesc:
          type: string
          maxLength: 30
        serviceCode:
          $ref: '#/components/schemas/ServiceCodeEnum'
        warrantyCode:
          $ref: '#/components/schemas/WarrantyCodeEnum'
        addendum:
          type: integer
      required:
      - addendum
      - id
      - number
      - partDesc
      - partItem
      - partOrder
      - serviceCode
      - warrantyCode
    OrderSequenceDetail:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        region:
          type: integer
        number:
          type: integer
          readOnly: true
        addendum_set:
          type: array
          items:
            $ref: '#/components/schemas/OrderAddendumDetail'
      required:
      - addendum_set
      - id
      - number
      - region
    OrderSequenceList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        number:
          type: integer
          readOnly: true
        region:
          type: integer
        jobSite:
          type: integer
        serviceCenter:
          type: integer
        billingCust:
          type: integer
      required:
      - billingCust
      - id
      - jobSite
      - number
      - region
      - serviceCenter
    PatchedSchedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        confirmed:
          type: boolean
        description:
          type: string
          nullable: true
          maxLength: 1024
        travelHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        allDay:
          type: boolean
        recurrenceRule:
          type: string
          nullable: true
          maxLength: 256
        addendum:
          type: integer
          nullable: true
        serviceCenter:
          type: integer
        scheduledBy:
          type: integer
          nullable: true
        confirmedBy:
          type: integer
          nullable: true
        technicians:
          type: array
          items:
            type: integer
    Profile:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
        region:
          type: integer
          nullable: true
        serviceCenter:
          type: integer
          nullable: true
      required:
      - id
      - user
    Region:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 128
      required:
      - id
      - name
    Schedule:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        startDateTime:
          type: string
          format: date-time
        endDateTime:
          type: string
          format: date-time
        confirmed:
          type: boolean
        description:
          type: string
          nullable: true
          maxLength: 1024
        travelHours:
          type: string
          format: decimal
          pattern: ^-?\d{0,4}(?:\.\d{0,2})?$
        allDay:
          type: boolean
        recurrenceRule:
          type: string
          nullable: true
          maxLength: 256
        addendum:
          type: integer
          nullable: true
        serviceCenter:
          type: integer
        scheduledBy:
          type: integer
          nullable: true
        confirmedBy:
          type: integer
          nullable: true
        technicians:
          type: array
          items:
            type: integer
      required:
      - endDateTime
      - id
      - serviceCenter
      - startDateTime
      - technicians
      - travelHours
    ServiceCenter:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        street:
          type: string
          maxLength: 1024
        street2:
          type: string
          maxLength: 1024
        city:
          type: string
          maxLength: 1024
        state:
          $ref: '#/components/schemas/StateEnum'
        zipCode:
          type: string
          maxLength: 10
        country:
          type: string
          maxLength: 2
        county:
          type: string
          maxLength: 128
        latitude:
          type: number
          format: double
          nullable: true
        longitute:
          type: number
          format: double
          nullable: true
        name:
          type: string
          maxLength: 128
        manager:
          $ref: '#/components/schemas/ManagerEnum'
        region:
          type: integer
      required:
      - city
      - county
      - id
      - manager
      - name
      - region
      - state
      - street
      - zipCode
    ServiceCodeEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      - '8'
      - '9'
      - '10'
      - '11'
      - '12'
      - '13'
      - '14'
      - '15'
      - '16'
      - '17'
      - '18'
      - '19'
      - '20'
      - '21'
      - '22'
      - '23'
      - '24'
      - '25'
      - '26'
      - '27'
      - '28'
      - '29'
      - '30'
      - '31'
      - '32'
      - '33'
      - '34'
      - '35'
      - '36'
      - '37'
      - '38'
      - '39'
      - '40'
      - '41'
      - '42'
      - '43'
      - '44'
      - '45'
      - '46'
      - '47'
      - '48'
      - '49'
      - '50'
      - '51'
      - '52'
      - '53'
      - '54'
      - '55'
      - '56'
      - '99'
      type: string
    StateEnum:
      enum:
      - AL
      - AK
      - AS
      - AZ
      - AR
      - AA
      - AE
      - AP
      - CA
      - CO
      - CT
      - DE
      - DC
      - FL
      - GA
      - GU
      - HI
      - ID
      - IL
      - IN
      - IA
      - KS
      - KY
      - LA
      - ME
      - MD
      - MA
      - MI
      - MN
      - MS
      - MO
      - MT
      - NE
      - NV
      - NH
      - NJ
      - NM
      - NY
      - NC
      - ND
      - MP
      - OH
      - OK
      - OR
      - PA
      - PR
      - RI
      - SC
      - SD
      - TN
      - TX
      - UT
      - VT
      - VI
      - VA
      - WA
      - WV
      - WI
      - WY
      type: string
    StatusEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      type: string
    Technician:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        primaryCenter:
          type: integer
          nullable: true
        qualifier:
          type: string
          maxLength: 1
        type:
          type: string
          maxLength: 1
        firstName:
          type: string
          maxLength: 128
        lastName:
          type: string
          maxLength: 128
        fullName:
          type: string
          readOnly: true
        workWeek:
          $ref: '#/components/schemas/WorkWeek'
        active:
          type: boolean
      required:
      - firstName
      - fullName
      - id
      - workWeek
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        profile:
          allOf:
          - $ref: '#/components/schemas/Profile'
          readOnly: true
      required:
      - id
      - profile
      - username
    WarrantyCodeEnum:
      enum:
      - '1'
      - '2'
      - '3'
      - '4'
      - '5'
      - '6'
      - '7'
      type: string
    WorkWeek:
      type: object
      properties:
        monday:
          type: boolean
        tuesday:
          type: boolean
        wedesday:
          type: boolean
        thursday:
          type: boolean
        friday:
          type: boolean
        saturday:
          type: boolean
        sunday:
          type: boolean
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
